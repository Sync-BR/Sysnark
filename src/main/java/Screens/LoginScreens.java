/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package Screens;

import Beans.EmployeesBeans;
import Dao.AuthenticateDao;
import java.util.TimerTask;

/**
 *
 * @author Eduar
 */
public class LoginScreens extends javax.swing.JFrame {

    /**
     * Creates new form Login
     */
    public LoginScreens() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        username = new javax.swing.JTextField();
        userPass = new javax.swing.JPasswordField();
        Login = new javax.swing.JButton();
        Status = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Authenticate", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel1.setText("Usuario:");

        jLabel2.setText("Senha:");

        Login.setText("Acessar");
        Login.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(username)
                    .addComponent(userPass)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 313, Short.MAX_VALUE)))
                .addContainerGap())
            .addComponent(Login, javax.swing.GroupLayout.DEFAULT_SIZE, 372, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(userPass, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Login))
        );

        Status.setText("Status");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Status, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Status)
                .addGap(0, 24, Short.MAX_VALUE))
        );

        Status.setText("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
/**
     * Método responsável por processar a ação de login quando um evento de ação
     * é disparado. Este método lê as credenciais de login da interface gráfica,
     * tenta autenticar o usuário através do {@link AuthenticateDao}, e atualiza
     * a interface gráfica com o resultado do processo de login.
     *
     * @param evt O evento de ação que disparou este método.
     */
    private void LoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginActionPerformed
        EmployeesBeans addUser = new EmployeesBeans(); // Inicializa o objeto addUser para armazenar os detalhes do usuário.
        AuthenticateDao authenticate = new AuthenticateDao(); // Cria uma instância da classe AuthenticateDao para gerenciar o processo de login.

        // Captura as credenciais inseridas pelo usuário na interface gráfica.
        addUser.setLogin(username.getText()); // Define o nome de usuário a partir do campo de texto da interface.
        addUser.setPassword(userPass.getText()); // Define a senha a partir do campo de senha da interface.

        // Tenta autenticar o usuário com as credenciais fornecidas.
        try {
            authenticate.login(addUser); // Executa o método de login.
        } catch (Exception e) {
            e.printStackTrace(); // Imprime no console as exceções que podem ocorrer durante a autenticação.
        }
        // Verifica se a autenticação foi bem-sucedida.
        if (authenticate.authenticatedSuccessfully) {
            username.setText(""); // Limpa o campo de texto do nome de usuário.
            userPass.setText(""); // Limpa o campo de senha.
            Status.setText("Verificando conta "); // Atualiza o status na interface gráfica para "Sucesso".

            // Inicializa um temporizador para atrasar a abertura das interfaces específicas de usuário após o login.
            new java.util.Timer().schedule(new TimerTask() {
                @Override
                public void run() {
                    // Executa a tarefa em uma thread do AWT para garantir que a UI é atualizada de forma segura.
                    java.awt.EventQueue.invokeLater(() -> {
                        // Define ações baseadas no nível de acesso do usuário autenticado.
                        switch (authenticate.access) {
                            case 1:
                                // Abre a interface gráfica para funcionários.
                                break;
                            case 2:
                                // Abre a interface gráfica para gestores de estoque.
                                break;
                            case 3:
                                // Abre a interface gráfica para administradores.
                                new ManageProducts().setVisible(true);
                                break;
                            default:
                                // Configura o status para indicar falha na verificação do tipo de conta.
                                Status.setText("Falhou na verificação da conta.");
                        }
                        // Encerra a janela de login atual após o redirecionamento ou falha.
                        dispose();
                    });
                }
            }, 2000); // Executa a tarefa após um delay de 2 segundos.

        } else {
            // Define o status para indicar falha na autenticação.
            Status.setText("Login ou senha incorreta");
        }


    }//GEN-LAST:event_LoginActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(LoginScreens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(LoginScreens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(LoginScreens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(LoginScreens.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LoginScreens().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Login;
    private javax.swing.JLabel Status;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField userPass;
    private javax.swing.JTextField username;
    // End of variables declaration//GEN-END:variables

}
