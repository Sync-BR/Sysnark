/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/Application.java to edit this template
 */
package Screens;

import Api.CEPQuery;
import Beans.ApiAddressBeans;
import Beans.EmployeesBeans;
import Beans.ProductsBeans;
import Checker.DateChecker;
import Dao.EmployeeDAO;
import Dao.ProductsDao;
import static Dao.ProductsDao.Successfulregistration;
import Thread.Threads;
import com.google.protobuf.Parser;
import com.google.protobuf.StringValue;
import com.mycompany.mercadinho.Mercadinho;
import Checker.Employees;
import java.awt.event.ActionEvent;
import java.sql.Date;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import org.apache.http.client.utils.URIUtils;

/**
 *
 * @author sync
 */
public class ManageProducts extends javax.swing.JFrame {

    /**
     * Creates new form ManageProducts
     */
    public ManageProducts() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane3 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        productReturn = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        nameScreens = new javax.swing.JTextField();
        brandScreens = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        amountScreens = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        barcodeScreens = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        priceScreens = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        observationScreens = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jPanel8 = new javax.swing.JPanel();
        Employeelist = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        Employeename = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        Employeecpf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        EmployeeBank = new javax.swing.JComboBox<>();
        jLabel16 = new javax.swing.JLabel();
        Employeephonenumber = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        Employeeaccount = new javax.swing.JFormattedTextField();
        Employeedigits = new javax.swing.JFormattedTextField();
        jLabel17 = new javax.swing.JLabel();
        dateDay = new javax.swing.JComboBox<>();
        dateMonth = new javax.swing.JComboBox<>();
        dateYear = new javax.swing.JComboBox<>();
        jPanel10 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cep = new javax.swing.JTextField();
        jButton5 = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        CepRua = new javax.swing.JTextField();
        CepBairro = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        CepCidade = new javax.swing.JTextField();
        CepEstado = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        CepComplement = new javax.swing.JTextArea();
        jPanel12 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        UserLogin = new javax.swing.JTextField();
        Userpassword = new javax.swing.JPasswordField();
        Confirmuserpassword = new javax.swing.JPasswordField();
        jLabel23 = new javax.swing.JLabel();
        UserAccess = new javax.swing.JComboBox<>();
        jPanel11 = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        Verifyaccount = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Painel administrador");
        setResizable(false);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar Produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jButton1.setText("Pesquisar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Search(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(productReturn, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(productReturn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gerenciar produtos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText("Nome");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel2.setText("Marca");

        jLabel3.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel3.setText("Quantidades");

        jLabel4.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel4.setText("Código de barras");

        jLabel5.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        jLabel5.setText("Preço");

        jLabel6.setText("Descrição");

        jScrollPane1.setViewportView(observationScreens);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nameScreens)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(brandScreens)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(amountScreens)
                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(barcodeScreens)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(105, 105, 105)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(priceScreens, javax.swing.GroupLayout.DEFAULT_SIZE, 186, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(nameScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(priceScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(brandScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(amountScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(barcodeScreens, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1))
                .addContainerGap(228, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));

        jButton2.setText("Salvar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Register(evt);
            }
        });

        jButton3.setText("Apagar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteProduct(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane3.addTab("Gerenciar Produtos", jPanel5);

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Buscar funcionário", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 14))); // NOI18N

        jButton4.setText("Pesquisar");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Searchemployee(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addComponent(Employeelist, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Employeelist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton4))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Gerenciar funcionário ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 12))); // NOI18N

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados"));

        jLabel7.setText("Nome:");

        jLabel8.setText("Data:");

        jLabel9.setText("Cpf:");

        jLabel12.setText("Conta");

        EmployeeBank.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Banco do Brasil (BB)", "Caixa Econômica Federal (CEF)", "Itaú Unibanco", "Bradesco ", "Santander Brasil ", "Banco Safra", "Banco Inter ", "Nubank " }));

        jLabel16.setText("Banco");

        jLabel15.setText("Celular");

        Employeeaccount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EmployeeaccountActionPerformed(evt);
            }
        });

        jLabel17.setText("Digitos");

        dateDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));

        dateMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Janeiro", "Fevereiro", "Março", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));

        dateYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024", "2023", "2022", "2021", "2020", "2019", "2018", "2017", "2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004", "2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991", "1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978", "1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965", "1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952", "1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939", "1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926", "1925", "1924" }));

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addComponent(dateDay, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(Employeecpf)
                    .addComponent(Employeename))
                .addGap(40, 40, 40)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(EmployeeBank, javax.swing.GroupLayout.Alignment.LEADING, 0, 227, Short.MAX_VALUE)
                        .addComponent(Employeephonenumber, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Employeeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(Employeedigits, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel7))
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Employeename, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel9Layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(Employeephonenumber, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EmployeeBank, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel12)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Employeecpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Employeeaccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Employeedigits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Endereço"));

        jLabel10.setText("Cep");

        jButton5.setText("Buscar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel11.setText("Rua");

        jLabel18.setText("Bairro");

        jLabel19.setText("Cidade");

        jLabel20.setText("Estado");

        jLabel14.setText("Complemento:");

        CepComplement.setColumns(20);
        CepComplement.setRows(5);
        jScrollPane2.setViewportView(CepComplement);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel10Layout.createSequentialGroup()
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(CepRua, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)
                                    .addComponent(CepBairro))
                                .addGap(33, 33, 33)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel20))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(CepEstado)
                                    .addComponent(CepCidade)))))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CepRua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel19)
                    .addComponent(CepCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(CepBairro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel20)
                    .addComponent(CepEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Dados do usuario"));

        jLabel13.setText("Usuario:");

        jLabel21.setText("Senha:");

        jLabel22.setText("Confirmar senha:");

        UserLogin.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                CheckUser(evt);
            }
        });

        Userpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UserpasswordActionPerformed(evt);
            }
        });

        Confirmuserpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Checkpassword(evt);
            }
        });

        jLabel23.setText("Tipo de conta:");

        UserAccess.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Administrador", "Gestores de estoque", "Funcionário" }));
        UserAccess.setSelectedIndex(2);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(UserLogin))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Userpassword))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel23))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Confirmuserpassword)
                            .addComponent(UserAccess, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(UserLogin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(Userpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(Confirmuserpassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel23)
                    .addComponent(UserAccess, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Operações"));

        jButton6.setText("Salvar");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Save(evt);
            }
        });

        jButton7.setText("Deletar");

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(200, 200, 200))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 728, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane3.addTab("Gerenciar Funcionários", jPanel6);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 582, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 777, Short.MAX_VALUE)
        );

        jTabbedPane3.addTab("tab3", jPanel7);

        Verifyaccount.setText("Status da senha");
        //Verifyaccount.setText("");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(Verifyaccount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 582, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, 0)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 807, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Verifyaccount)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * Manipula o evento de clique para deletar um produto selecionado. Este
     * método tenta remover um produto usando seu código de barras e atualiza a
     * interface gráfica com base no sucesso ou falha da operação.
     *
     * @param evt O evento de ação que disparou este método.
     */
    private void DeleteProduct(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteProduct
        // Cria uma instância de ProductsBeans para armazenar os dados do produto a ser deletado.
        ProductsBeans deleteProduct = new ProductsBeans();
        // Cria uma instância de ProductsDao para realizar operações de banco de dados.
        ProductsDao Delete = new ProductsDao();
        // Obtém o código de barras do produto a partir da interface gráfica.
        deleteProduct.setBarcode(barcodeScreens.getText());
        // Tenta deletar o produto utilizando o código de barras e trata exceções relacionadas ao banco de dados.
        try {
            Delete.removeProduct(deleteProduct);
        } catch (Exception e) {
            e.printStackTrace();
        }
        // Verifica se o produto foi deletado com sucesso.
        if (Delete.successfullyRemoved) {
            // Limpa os campos da interface gráfica após a deleção bem-sucedida.
            nameScreens.setText("");  // Limpa o campo de nome.
            brandScreens.setText("");  // Limpa o campo de marca.
            amountScreens.setValue(0);  // Redefine a quantidade em estoque para 0.
            barcodeScreens.setText("");  // Limpa o campo de código de barras.
            priceScreens.setText("");  // Limpa o campo de preço.
            observationScreens.setText("");  // Limpa o campo de descrição.
        }
        // Tenta atualizar a lista de nomes de produtos na interface gráfica após a deleção.
        try {
            Delete.returnProductnames();
        } catch (Exception e) {
            e.printStackTrace();
        }
        // Limpa todos os itens do JComboBox na interface gráfica.
        productReturn.removeAllItems();
        // Adiciona os nomes dos produtos atualizados ao JComboBox.
        for (int index = 0; index < Delete.Productnames.size(); index++) {
            productReturn.addItem(Delete.Productnames.get(index));
        }
    }//GEN-LAST:event_DeleteProduct

    /**
     * Método para manipular eventos de clique com o objetivo de registrar ou
     * atualizar um produto no sistema. Este método utiliza a classe
     * ProductsBeans para criar uma instância do produto e a classe ProductsDao
     * para interagir com o banco de dados. O método decide se um produto será
     * registrado como novo ou atualizado com base no status de uma busca ativa
     * (indicado pela variável 'activeSearch').
     *
     * @param evt O evento de ação que disparou este método, tipicamente um
     * clique em um botão de registro ou atualização.
     */
    private void Register(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Register

        //Verificar se vai adicionar umn= novo produto ou atualizar
        if (activeSearch) {
            //Executar código de salvamento
            // Caminho de execução para atualizar um produto existente
            ProductsBeans Saveproduct = new ProductsBeans();
            ProductsDao Salve = new ProductsDao();
            // Coleta as informações do produto dos componentes da interface gráfica
            Saveproduct.setName(nameScreens.getText()); //Atribuir o valor do nome
            Saveproduct.setBrand(brandScreens.getText()); //Atribuir o valor da marca
            Saveproduct.setAmount(Integer.parseInt(amountScreens.getValue().toString())); //Converter e atribuir o valor da quantidade
            Saveproduct.setBarcode(barcodeScreens.getText()); //Atribuir o valor do barra de código
            Saveproduct.setPrice(priceScreens.getText());//Atribuir o valor do preço
            Saveproduct.setDescription(observationScreens.getText()); //Atribuir o valor da observação
            // Limpa os campos e atualiza a lista de produtos na interface após a atualização bem-sucedida
            try {
                Salve.UpdateProducts(Saveproduct);
            } catch (Exception e) {
                e.printStackTrace();
            }
            if (Salve.savedSuccessfully) {
                // Caminho de execução para registrar um novo produto
                try {
                    Salve.returnProductnames();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                // Limpa os campos da interface gráfica após a deleção bem-sucedida.
                nameScreens.setText("");  // Limpa o campo de nome.
                brandScreens.setText("");  // Limpa o campo de marca.
                amountScreens.setValue(0);  // Redefine a quantidade em estoque para 0.
                barcodeScreens.setText("");  // Limpa o campo de código de barras.
                priceScreens.setText("");  // Limpa o campo de preço.
                observationScreens.setText("");  // Limpa o campo de descrição.
                // Limpa todos os itens do JComboBox na interface gráfica.
                productReturn.removeAllItems();
                // Adiciona os nomes dos produtos atualizados ao JComboBox.
                for (int index = 0; index < Salve.Productnames.size(); index++) {
                    productReturn.addItem(Salve.Productnames.get(index));
                }
                activeSearch = false;
            }
        } else {
            //Executar código de registro de novos produtos
            // Caminho de execução para registrar um novo produto
            ProductsBeans Addproducts = new ProductsBeans();
            ProductsDao Register = new ProductsDao();
            // Coleta as informações do produto dos componentes da interface gráfica
            Addproducts.setName(nameScreens.getText()); //Atribuir o valor do nome
            Addproducts.setBrand(brandScreens.getText()); //Atribuir o valor da marca
            Addproducts.setAmount(Integer.parseInt(amountScreens.getValue().toString()));
            Addproducts.setBarcode(barcodeScreens.getText());
            Addproducts.setPrice(priceScreens.getText());
            Addproducts.setDescription(observationScreens.getText());
            // Registra o novo produto no banco de dados
            try {
                Register.addProducts(Addproducts);
            } catch (Exception e) {
                e.printStackTrace();
            }
            // Limpa os campos e atualiza a lista de produtos na interface após o registro bem-sucedido

            if (Successfulregistration) {
                try {
                    Register.returnProductnames();
                } catch (Exception e) {
                    e.printStackTrace();
                }
                // Limpa os campos da interface gráfica após a deleção bem-sucedida.
                nameScreens.setText("");  // Limpa o campo de nome.
                brandScreens.setText("");  // Limpa o campo de marca.
                amountScreens.setValue(0);  // Redefine a quantidade em estoque para 0.
                barcodeScreens.setText("");  // Limpa o campo de código de barras.
                priceScreens.setText("");  // Limpa o campo de preço.
                observationScreens.setText("");  // Limpa o campo de descrição.
                // Limpa todos os itens do JComboBox na interface gráfica.
                productReturn.removeAllItems();
                // Adiciona os nomes dos produtos atualizados ao JComboBox.
                for (int index = 0; index < Register.Productnames.size(); index++) {
                    productReturn.addItem(Register.Productnames.get(index));
                }
                Successfulregistration = false;
            }
        }
    }//GEN-LAST:event_Register
//Variavel responsavel pelo metodo de pesquisa.
    public boolean activeSearch;

    /**
     * Método para buscar um produto e atualizar a interface gráfica com os
     * resultados da busca. Este método é invocado em resposta a um evento de
     * ação, como um clique de botão.
     *
     * @param evt O evento de ação que dispara este método.
     */
    private void Search(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Search
        // Cria uma nova instância de ProductsBeans para armazenar dados temporários do produto
        ProductsBeans Searchproduct = new ProductsBeans();
        // Cria uma nova instância de ProductsDao para realizar operações de banco de dados
        ProductsDao Search = new ProductsDao();
        // Define o nome do produto a ser pesquisado baseado na seleção do usuário na combobox
        Searchproduct.setName(productReturn.getSelectedItem().toString());
        System.out.println("Nome selecionado: " + Searchproduct.getName()); // Log do nome selecionado para fins de depuração
        try {
            // Realiza a busca do produto no banco de dados
            Search.searchProducts(Searchproduct);
        } catch (Exception e) {
            // Loga o erro no console se algo der errado durante a busca
            e.printStackTrace();
        }
        // Verifica se um produto foi encontrado após a pesquisa
        if (Search.Productfound) {
            // Atualiza os campos da interface gráfica com os dados do produto encontrado
            nameScreens.setText(Searchproduct.getName());
            brandScreens.setText(Searchproduct.getBrand());
            amountScreens.setValue(Searchproduct.getAmount());
            barcodeScreens.setText(Searchproduct.getBarcode());
            priceScreens.setText(Searchproduct.getPrice());
            observationScreens.setText(Searchproduct.getDescription());
            activeSearch = true; //Variavel responsavel pelo metodo de pesquisa. Quando ativado ele vai salvar ao inves de criar um novo produto
        } else {
            activeSearch = false;
        }


    }//GEN-LAST:event_Search
    /**
     * Variável que indica se o usuário está editando ou criando um novo
     * funcionário. Verdadeiro se estiver editando um funcionário existente,
     * falso para criação de um novo funcionário.
     */
    public boolean searchEmployee;

    /**
     * Pesquisa um funcionário pelo nome selecionado na interface gráfica e, se
     * encontrado, preenche os campos da interface gráfica com os dados do
     * funcionário.
     *
     * @param evt O evento de ação que disparou este método.
     */
    private void Searchemployee(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Searchemployee
        EmployeesBeans Addsearch = new EmployeesBeans(); // Inicia uma instância da classe EmployeesBeans para armazenar dados do funcionário.
        EmployeeDAO Search = new EmployeeDAO(); // Cria uma instância da classe EmployeeDAO para acessar métodos de pesquisa no banco de dados.
        DateChecker formatedate = new DateChecker(); //Chamar o metado para formata a data

        // Define o nome do funcionário a ser pesquisado com base no item selecionado na interface gráfica.
        Addsearch.setName(Employeelist.getSelectedItem().toString());

        // Tenta pesquisar o funcionário usando o nome fornecido.
        try {
            Search.Searchemployees(Addsearch);
        } catch (Exception e) {
            e.printStackTrace(); // Loga qualquer exceção lançada durante a pesquisa no console.
        }
        // Tenta formatar a data 
        formatedate.FormateDate(Addsearch.getDate().toString());

        // Verifica se um funcionário foi encontrado com o nome fornecido.
        if (Search.employeeFound) {
            // Se encontrado, atualiza a interface gráfica com os dados do funcionário.
            Employeename.setText(Addsearch.getName());
            dateDay.setSelectedItem(formatedate.Day);
            dateMonth.setSelectedItem(formatedate.Month);
            dateYear.setSelectedItem(formatedate.Year);
            Employeecpf.setText(Addsearch.getCpf());
            Employeephonenumber.setText(Addsearch.getTelephone());
            EmployeeBank.setSelectedItem(Addsearch.getBank());
            String[] partes = Addsearch.getBankaccount().split("-"); //Efetuar separação da conta e digitos
            String accountnumber = partes[0];
            String accountdigits = partes[1];
            Employeeaccount.setText(accountnumber);
            Employeedigits.setText(accountdigits);
            cep.setText(Addsearch.getCep());
            CepBairro.setText(Addsearch.getNeighborhood());
            CepCidade.setText(Addsearch.getCity());
            CepEstado.setText(Addsearch.getState());
            CepRua.setText(Addsearch.getRoad());
            CepComplement.setText(Addsearch.getComplement());
            UserLogin.setText(Addsearch.getLogin());
            Userpassword.setText(Addsearch.getPassword());

            switch (Addsearch.getAccess()) {
                case 1:
                    //Administrador 
                    UserAccess.setSelectedIndex(0);
                    break;
                case 2:
                    //Gestores de estoque
                    UserAccess.setSelectedIndex(1);

                    break;
                case 3:
                    //Funcionário
                    UserAccess.setSelectedIndex(2);
                    break;
            }
            UserAccess.setSelectedItem(ABORT);
            searchEmployee = true;
        } else {
            // Caso o funcionário não seja encontrado, você pode adicionar lógica para tratar esse caso.
        }

    }//GEN-LAST:event_Searchemployee
    /**
     * Manipula o evento de clique no botão relacionado à busca de CEP. Este
     * método é responsável por consultar um CEP usando uma API e atualizar a
     * interface gráfica com os resultados obtidos.
     *
     * @param evt O evento de clique do botão que disparou este método.
     */
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        CEPQuery cepQuery = new CEPQuery();

        try {
            // Realiza a consulta do CEP fornecido pelo usuário na interface gráfica.
            cepQuery.ZIPcodesearch(cep.getText());
        } catch (Exception e) {
            // Registra no console qualquer exceção que ocorra durante a busca pelo CEP.
            e.printStackTrace();
        }

        // Verifica se o CEP foi encontrado pela API.
        if (CEPQuery.Zipfound) {
            // Se encontrado, atualiza os campos da interface gráfica com os dados do endereço.
            CepRua.setText(ApiAddressBeans.logradouro);
            CepBairro.setText(ApiAddressBeans.bairro);
            CepEstado.setText(ApiAddressBeans.uf);
            CepCidade.setText(ApiAddressBeans.localidade);
        } else {
            // Se não encontrado, exibe uma mensagem no console e na interface gráfica.
            System.out.println("CEP não encontrado");
            CepBairro.setText("Não encontrado.");
        }


    }//GEN-LAST:event_jButton5ActionPerformed
    private void Save(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Save
        // Funcionalidade para salva ou registrar no banco de dados.
        EmployeesBeans Addemployee = new EmployeesBeans(); //Iniciar classe Beans
        EmployeeDAO save = new EmployeeDAO();
        DateChecker formateDate = new DateChecker(); //Iniciar metado para checar data
        Mercadinho Update = new Mercadinho(); //Chamar metado para efetuar atualização do gráfico.
        try {
            Update.searchEmployees();
        } catch (Exception e) {
            e.printStackTrace();
        }
        if (searchEmployee) {
            //Se o usuario pesquisar o modo sera de editar
            Addemployee.setName(Employeename.getText());
            //variaveis responsavel transformar as datas em integer.
            int day = Integer.parseInt(dateDay.getSelectedItem().toString());
            int month = dateMonth.getSelectedIndex();
            int year = Integer.parseInt(dateYear.getSelectedItem().toString());
            String date = Integer.toString(year+month+day);
            //Formatar data.
            try {
                formateDate.Checker(day, month, year);
            } catch (Exception e) {
                e.printStackTrace();
            }
            Addemployee.setDate(Date.valueOf(formateDate.Date));
            Addemployee.setCpf(Employeecpf.getText());
            Addemployee.setTelephone(Employeephonenumber.getText());
            Addemployee.setBank(EmployeeBank.getSelectedItem().toString());
            Addemployee.setBankaccount(Employeeaccount.getText() +"-"+ Employeedigits.getText());
            Addemployee.setCep(cep.getText());
            Addemployee.setRoad(CepRua.getText());
            Addemployee.setNeighborhood(CepBairro.getText());
            Addemployee.setCity(CepCidade.getText());
            Addemployee.setState(CepEstado.getText());
            Addemployee.setComplement(CepComplement.getText());
            //Obter dados de login do funcionario da interface gráfica.
            Addemployee.setLogin(UserLogin.getText());
            Addemployee.setPassword(Userpassword.getText());
            switch (UserAccess.getSelectedIndex()) {
                //Conta administradora
                case 0:
                    Addemployee.setAccess(1);
                    break;
                case 1:
                    //Conta gestores de estoque
                    Addemployee.setAccess(2);
                    break;
                case 2:
                    //Conta funcionario
                    Addemployee.setAccess(3);
                    break;
                default:
                    throw new AssertionError();
            }
            try {
                save.Saveemployee(Addemployee);
            } catch (Exception e) {
                e.printStackTrace();
            }
        } else {
            //Se o usuario não pesquisar sera modo registrar

            //Pegar dados da interface gráfica.
            Addemployee.setName(Employeename.getText());
            //variaveis responsavel transformar as datas em integer.
            int day = Integer.parseInt(dateDay.getSelectedItem().toString());
            int month = dateMonth.getSelectedIndex();
            int year = Integer.parseInt(dateYear.getSelectedItem().toString());
            //Formatar data.
            try {
                formateDate.Checker(day, month, year);
            } catch (Exception e) {
                e.printStackTrace();
            }
            //Obter informaçãos da residencia dos funcionários.
            Addemployee.setDate(Date.valueOf(formateDate.Date));
            Addemployee.setCpf(Employeecpf.getText());
            Addemployee.setTelephone(Employeephonenumber.getText());
            Addemployee.setBank(EmployeeBank.getSelectedItem().toString());
            Addemployee.setBankaccount(Employeeaccount.getText() + "-" + Employeedigits.getText());
            Addemployee.setCep(cep.getText());
            Addemployee.setRoad(CepRua.getText());
            Addemployee.setNeighborhood(CepBairro.getText());
            Addemployee.setCity(CepCidade.getText());
            Addemployee.setState(CepEstado.getText());
            Addemployee.setComplement(CepComplement.getText());
            //Obter dados de login do funcionario da interface gráfica.
            Addemployee.setLogin(UserLogin.getText());
            Addemployee.setPassword(Userpassword.getText());
            switch (UserAccess.getSelectedIndex()) {
                //Conta administradora
                case 0:
                    Addemployee.setAccess(1);
                    break;
                case 1:
                    //Conta gestores de estoque
                    Addemployee.setAccess(2);
                    break;
                case 2:
                    //Conta funcionario
                    Addemployee.setAccess(3);
                    break;
                default:
                    throw new AssertionError();
            }

            try {
                save.RegisterEmployees(Addemployee);
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        if (save.successfullyRegisteredEmployees) {
            System.out.println("Sucesso");
        } else {
            System.out.println("Falhou");
        }
        if (save.savedSuccessfully) {
            System.out.println("Atualizado");
        } else {
            System.out.println("Falhou");
        }

    }//GEN-LAST:event_Save

    private void Checkpassword(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Checkpassword
        Threads check = new Threads();
        try {
            check.Checkpassword();
        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_Checkpassword

    private void UserpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UserpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UserpasswordActionPerformed

    private void CheckUser(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CheckUser
        Threads check = new Threads();
        try {
            check.Verifyuser();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_CheckUser

    private void EmployeeaccountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EmployeeaccountActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_EmployeeaccountActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageProducts.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageProducts().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CepBairro;
    private javax.swing.JTextField CepCidade;
    private javax.swing.JTextArea CepComplement;
    private javax.swing.JTextField CepEstado;
    private javax.swing.JTextField CepRua;
    public static javax.swing.JPasswordField Confirmuserpassword;
    private javax.swing.JComboBox<String> EmployeeBank;
    private javax.swing.JFormattedTextField Employeeaccount;
    private javax.swing.JTextField Employeecpf;
    private javax.swing.JFormattedTextField Employeedigits;
    public static javax.swing.JComboBox<String> Employeelist;
    private javax.swing.JTextField Employeename;
    private javax.swing.JTextField Employeephonenumber;
    private javax.swing.JComboBox<String> UserAccess;
    public static javax.swing.JTextField UserLogin;
    public static javax.swing.JPasswordField Userpassword;
    public static javax.swing.JLabel Verifyaccount;
    private javax.swing.JSpinner amountScreens;
    private javax.swing.JTextField barcodeScreens;
    public static javax.swing.JTextField brandScreens;
    private javax.swing.JTextField cep;
    private javax.swing.JComboBox<String> dateDay;
    private javax.swing.JComboBox<String> dateMonth;
    private javax.swing.JComboBox<String> dateYear;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    public static javax.swing.JTextField nameScreens;
    private javax.swing.JTextPane observationScreens;
    private javax.swing.JTextField priceScreens;
    public static javax.swing.JComboBox productReturn;
    // End of variables declaration//GEN-END:variables

}
